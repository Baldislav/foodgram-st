version: '3.8'

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:

services:
  db:
    image: postgres:13-alpine
    container_name: foodgram_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    image: baldislav/foodgram_backend:latest
    container_name: foodgram_backend
    restart: always
    volumes:
      - ./backend:/app
      - ./data:/app/data
      - static_volume:/app/static_django
      - media_volume:/app/media
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    expose:
      - "8000"

  frontend:
    build:
      context: ./frontend
    image: baldislav/foodgram_frontend:latest
    container_name: foodgram_frontend
    restart: always
    volumes:
      - frontend_build:/app/build

  nginx:
    build:
      context: ./infra
    image: baldislav/foodgram_gateway:latest
    container_name: foodgram_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html
      - static_volume:/static_django
      - media_volume:/media
      - ./docs/:/usr/share/nginx/html/api/docs/:ro
    depends_on:
      - backend
      - frontend
